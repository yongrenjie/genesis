; gns_noah3-StST

; =========================================================================
; set 'NBL' TopSpin parameter to 3
; 
;     [zgoptns: use -DPRESAT for presaturation during d1]
; 13C HSQC-TOCSY with variable INEPT excitation
;     [specify fraction of 1J(CH) magnetisation to use with cnst32]
;     [zgoptns: use -DINVERT1 for editing of direct/indirect peaks]
; 13C HSQC
;     [zgoptns: use -DEDIT for multiplicity editing]
; 1H phase-sensitive TOCSY
;     [zgoptns: use -DNOZQS for no zero-quantum suppression]
;     [zgoptns: use -DES for excitation sculpting]
; =========================================================================

;$CLASS=HighRes
;$DIM=2D
;$TYPE=
;$SUBTYPE=
;$COMMENT=

;E. Kupce, T. D. W. Claridge
;Angew. Chem. Int. Ed. 2017, 56 (39), 11779-11783
;NOAH: NMR Supersequences for Small Molecule Analysis and Structure Elucidation

;J. R. J. Yong, A. L. Hansen, E. Kupce, T. D. W. Claridge
;J. Magn. Reson. 2021, 327, 107027
;Increasing Sensitivity and Versatility in NMR Supersequences with New HSQC-based Modules

#include <Avance.incl>
#include <Grad.incl>
#include <Delay.incl>

#ifdef NUS
define list<loopcounter> t1list=<$VCLIST>
#endif /* NUS */

define delay DCI_HSQCTa
define delay DCI_HSQCTb
define delay DCI_HSQCTc
define delay DCI_HSQCTd
define delay DCI_HSQCTe
define delay DCI_HSQCTf
define delay DCI_HSQCTg
define delay DCI_HSQCTh
define delay DC_HSQCa
define delay DC_HSQCb
define delay DC_HSQCc
define delay DC_HSQCd
define delay DC_HSQCe
define delay DC_HSQCf
define delay DH_EXSCULPT
"cnst41      = 2*sfo2/sfo1"                             ; gradient ratio
"d0          = 3u"                                      ; 13C t1
"d2          = 0.5s/cnst2"                              ; JCOMP
"d4          = 0.25s/cnst2"                             ; 13C INEPT
"d10         = 3u"                                      ; TOCSY t1
"in0         = inf1/2"                                  ; 13C increment
"in10        = 2*dw"                                    ; TOCSY increment
"l11         = (d9/(p6*115.112))/2"                     ; half the number of TOCSY loops
"l12         = l11*2"                                   ; number of TOCSY loops
"l13         = (d19/(p6*115.112))/2"                    ; half the number of DIPSI-2 loops
"l14         = l13*2"                                   ; number of DIPSI-2 loops
"p2          = p1*2"                                    ; 1H hard 180
"DCI_HSQCTa  = (asin(cnst32)/(2*PI*cnst2))-p14/2000000"
"DCI_HSQCTb  = (asin(cnst32)/(2*PI*cnst2))+p14/2000000"
"DCI_HSQCTc  = p16+d16+p2/2+d0-p3*2/PI+4u"
"DCI_HSQCTd  = d4-p14/2"
"DCI_HSQCTe  = d4+p14/2-p16-d16"
"DCI_HSQCTf  = d2-p14/2-p16-d16-4u"
"DCI_HSQCTg  = d2+p14/2-p16-d16-de"
"DCI_HSQCTh  = de+4u"
"DC_HSQCa    = d4-p14/2"
"DC_HSQCb    = d4+p14/2"
"DC_HSQCc    = p16+d16+p2/2+d0-p3*2/PI+4u"
"DC_HSQCd    = d2+p3+p2/2"
"DC_HSQCe    = DC_HSQCc+p3-p2/2"
"DC_HSQCf    = DC_HSQCb-p16-d16-p3-de+p1*2/PI-8u"
"DH_EXSCULPT = de+p1*2/3.1416"
define list<gradient> GCI_HSQCT={cnst41}
define list<gradient> GC_HSQC={cnst41}
"l0      = td1/3"             ; TD1/NBL (i.e. TD1 for ordinary modules)
"l1      = 0"                 ; Running counter for TD1 for ordinary modules (0 on first increment)
"l2      = 0"                 ; Running counter for NS (1 on first scan)
"acqt0   = 0"
baseopt_echo

1 ze
2 30m
3 5m
4 50u UNBLKGRAD

#ifdef NUS
  "d0=(in0*t1list)+3u"
  "d10=(in10*t1list)+3u"
#endif /* NUS */
  1m iu2

  ; Cleanup
  4u pl2:f2
  (p3 ph0):f2
  4u pl1:f1
  p16:gp0
  d16
  (p1 ph0):f1
  4u
  p16:gp0*1.37
  d16
  4u BLKGRAD
#ifdef PRESAT
  4u pl9:f1
  10u st0
  d1 cw:f1
  4u do:f1
  4u pl1:f1
#else
  d1 st0
#endif /* PRESAT */
  4u UNBLKGRAD


  ; MODULE 1
  ; 13C-1H HSQC-TOCSY with variable INEPT excitation

  ; INEPT
  (p1 ph0):f1
  DCI_HSQCTa
  (p14:sp3 ph0):f2
  (p2 ph0):f1
  DCI_HSQCTb pl2:f2
  (p1 ph1):f1
  (p3 ph5):f2
  DCI_HSQCTc

  ; t1 period
  (p14:sp3 ph0):f2
  4u
  p16:gp3
  d16
  d0
  (p2 ph11):f1
  d0
  4u
  p16:gp3
  d16
  (p14:sp3 ph0):f2
  DCI_HSQCTc pl2:f2

  ; reverse INEPT
  (p3 ph7):f2
  (p1 ph2):f1
  DCI_HSQCTd
  (p14:sp3 ph0):f2
  (p2 ph1):f1

  p16:gp13
  d16
  DCI_HSQCTe pl10:f1

						;begin DIPSI2
5 p6*3.556 ph3
  p6*4.556 ph1
  p6*3.222 ph3
  p6*3.167 ph1
  p6*0.333 ph3
  p6*2.722 ph1
  p6*4.167 ph3
  p6*2.944 ph1
  p6*4.111 ph3

  p6*3.556 ph1
  p6*4.556 ph3
  p6*3.222 ph1
  p6*3.167 ph3
  p6*0.333 ph1
  p6*2.722 ph3
  p6*4.167 ph1
  p6*2.944 ph3
  p6*4.111 ph1

  p6*3.556 ph1
  p6*4.556 ph3
  p6*3.222 ph1
  p6*3.167 ph3
  p6*0.333 ph1
  p6*2.722 ph3
  p6*4.167 ph1
  p6*2.944 ph3
  p6*4.111 ph1

  p6*3.556 ph3
  p6*4.556 ph1
  p6*3.222 ph3
  p6*3.167 ph1
  p6*0.333 ph3
  p6*2.722 ph1
  p6*4.167 ph3
  p6*2.944 ph1
  p6*4.111 ph3
  lo to 5 times l14
						;end DIPSI2

  4u
  p16:gp13*-1
  d16 pl1:f1

#ifdef INVERT1
  DCI_HSQCTf
  (p14:sp3 ph0):f2
  (p2 ph1):f1
  p16:gp3*GCI_HSQCT*EA
  d16 pl12:f2
  DCI_HSQCTg
#else
  DCI_HSQCTh
  (p2 ph1):f1
  4u
  p16:gp3*GCI_HSQCT*EA
  d16 pl12:f2
  4u
#endif /* INVERT1 */
  goscnp ph30 cpd2:f2   ; acquire 13C HSQC-TOCSY
  50u do:f2

  ; Cleanup
  4u pl1:f1
  4u pl2:f2
  (p3 ph0):f2
  4u
  p16:gp0*1.77
  d16
  10u st


  ; MODULE 2
  ; 13C-1H HSQC

  ; INEPT
  (p1 ph0):f1
  DC_HSQCa
  (p14:sp3 ph0):f2
  (p2 ph0):f1
  DC_HSQCb pl2:f2
  (p1 ph1):f1
  (p3 ph5):f2
  DC_HSQCc

  ; t1 period
#ifdef EDIT
  (p31:sp18 ph0):f2
#else
  (p14:sp3 ph0):f2
#endif /* EDIT */
  4u
  p16:gp4
  d16
  d0
  (p2 ph11):f1
  d0
  4u
  p16:gp4
  d16

  ; multiplicity editing
#ifdef EDIT
  DC_HSQCd
  (p31:sp18 ph0):f2
  DC_HSQCe
  (p2 ph1):f1
  d2 pl2:f2
#else
  (p14:sp3 ph0):f2
  DC_HSQCc pl2:f2
#endif /* EDIT */

  ; reverse INEPT
  (p3 ph7):f2
  (p1 ph0):f1
  DC_HSQCa
  (p14:sp3 ph0):f2
  (p2 ph1):f1
  4u
  p16:gp4*EA*GC_HSQC
  d16 pl2:f2
  DC_HSQCf
  (p3 ph0):f2
  4u pl12:f2
  goscnp ph30 cpd2:f2
  50u do:f2

  ; Cleanup
  4u pl1:f1
  4u pl2:f2
  (p3 ph0):f2
  4u
  p16:gp0*2.32
  d16
  10u st


  ; MODULE 3
  ; 1H-1H TOCSY

  (p1 ph6):f1
  d10
  (p1 ph0):f1
#ifdef NOZQS
  p16:gp11*0.65
#else
  10u gron12
  (p32:sp29 ph0):f1
  20u groff
#endif  /* NOZQS */
  d16 pl10:f1

						;begin DIPSI2
8 p6*3.556 ph3
  p6*4.556 ph1
  p6*3.222 ph3
  p6*3.167 ph1
  p6*0.333 ph3
  p6*2.722 ph1
  p6*4.167 ph3
  p6*2.944 ph1
  p6*4.111 ph3

  p6*3.556 ph1
  p6*4.556 ph3
  p6*3.222 ph1
  p6*3.167 ph3
  p6*0.333 ph1
  p6*2.722 ph3
  p6*4.167 ph1
  p6*2.944 ph3
  p6*4.111 ph1

  p6*3.556 ph1
  p6*4.556 ph3
  p6*3.222 ph1
  p6*3.167 ph3
  p6*0.333 ph1
  p6*2.722 ph3
  p6*4.167 ph1
  p6*2.944 ph3
  p6*4.111 ph1

  p6*3.556 ph3
  p6*4.556 ph1
  p6*3.222 ph3
  p6*3.167 ph1
  p6*0.333 ph3
  p6*2.722 ph1
  p6*4.167 ph3
  p6*2.944 ph1
  p6*4.111 ph3
  lo to 8 times l12
						;end DIPSI2

  p16:gp11
  d16 pl1:f1
#ifdef NOZQS
#else
  10u gron12*1.333
  (p32*0.75:sp29 ph0):f1
  20u groff
  d16 pl1:f1
#endif  /* NOZQS */
  (p1 ph0):f1
#ifdef ES
  p16:gp20
  d16
  (p12:sp1 ph0):f1
  4u pl1:f1
  (p2 ph2):f1
  4u
  p16:gp20
  d16
  DH_EXSCULPT
  p16:gp21
  d16
  (p12:sp1 ph0):f1
  4u pl1:f1
  (p2 ph2):f1
  4u
  p16:gp21
  d16
#endif  /* ES */

  go=2 ph26

  ; incrementation on every pass
  1m iu1
  1m igrad EA
  1m ip6
  30m wr #0 if #0 zd

  ; incrementation on every second pass
if "l1 % 2 == 0" {
  1m ip5*2
  1m rp6
  1m ip30*2
#ifdef NUS
  1m t1list.inc
#else
  1m id0
  1m id10
#endif /* NUS */
}
  lo to 4 times l0

end, 4u
50u BLKGRAD
exit

ph0=0
ph1=1
ph2=2
ph3=3
ph5=0 2
ph6=0 2
ph7=0 0 2 2
ph11=0 0 0 0 2 2 2 2
ph26=0 2
ph30=0 2 2 0

;gpnam0: SMSQ10.100
;gpnam3: SMSQ10.100
;gpnam4: SMSQ10.100
;gpnam11: SMSQ10.100
;gpnam13: SMSQ10.100
;gpnam20: SMSQ10.100
;gpnam21: SMSQ10.100
;gpz0: 29% (for purging)
;gpz3: 75% (13C alternate module CTP)
;gpz4: 70% (13C CTP)
;gpz11: 43% (1H purge gradient)
;gpz12: 11% (1H ZQ filter)
;gpz13: 19% (13C DIPSI-2 purge gradients)
;gpz20: 57% (1H excitation sculpting)
;gpz21: 32% (1H excitation sculpting)

;WaveMaker shaped pulses (use 'wvm -a' to generate)
;sp1:wvm:wu180H1Sinc: sinc180(p12)
;sp3:wvm:wu180C13: cawurst-20(60 kHz, 0.5 ms; L2H)
;sp18:wvm:wu180Jcomp: cawurst-40(280 ppm; Jcomp, L2H)
;sp29:wvm:wu180H1ZQS: sm_chirp(60 kHz, 20 ms; H2L, Q=5)
;cpd2:wvm:wudec: cawurst_d-20(220 ppm, 1.4 ms; L2H)

;cnst2: = 1J(CH)
;cnst32: fraction of C-H magn used for HSQC-TOCSY [0.5 to 1]
;cnst41: gradient ratio (2*C/H)
;cpd2: 13C decoupling according to sequence defined by cpdprg2
;d0: undefined
;d1: undefined
;d2: undefined
;d4: undefined
;d9: undefined
;d10: undefined
;d16: undefined
;d19: undefined
;l0: TD1 / NBL, i.e. 'true TD1'
;l1: running counter for true TD1 (0 on first increment)
;l11: DIPSI-2 (1H module): half the number of DIPSI-2 cycles
;l12: DIPSI-2 (1H module): actual number of DIPSI-2 cycles
;l13: DIPSI-2 (1st 13C module): half the number of DIPSI-2 cycles
;l14: DIPSI-2 (1st 13C module): actual number of DIPSI-2 cycles
;p1: f1 channel -  90 degree high power pulse
;p2: f1 channel - 180 degree high power pulse
;p3: f2 channel -  90 degree high power pulse
;p6: f1 channel -  90 degree low power pulse for TOCSY
;p12: f1 channel - 180 degree inversion for excitation sculpting [2-8 ms]
;p14: f2 channel - 180 degree inversion [500 us for Crp60,0.5,20.1]
;p16: gradient pulse [1 ms]
;p31: f2 channel - 180 degree inversion with J-compensation
;p32: f1 channel - 180 degree adiabatic inversion [20 msec for Crp60,20,20.10]
;pl1: f1 channel - power level for pulse (default)
;pl2: f2 channel - power level for pulse (default)
;pl9: f1 channel - power level for presaturation
;pl10: f1 channel - power level for TOCSY-spinlock
;pl12: f2 channel - power level for CPD/BB decoupling
;sp1: 1H selective inversion
;sp3: 13C adiabatic inversion
;sp18: 13C J-compensated refocusing
;sp29: 1H ZQS chirp
;spnam1: Sinc1.1000 or WaveMaker
;spnam3: Crp60,0.5,20.1 or WaveMaker
;spnam18: Crp60_xfilt.2 or WaveMaker
;spnam29: Crp60,20,20.10 or WaveMaker
;aq: acquisition time
;ds: >= 16
;FnMODE: echo-antiecho
;NBL: number of blocks (NOAH modules)
;ns: 1 * n

; auprog: noah_hsqc:noah_hsqc:noah_tocsy States
; module identifiers: CI_HSQCT C_HSQC H_TOCSY
; pulse programme created by genesis-v2.0.20, https://nmr-genesis.co.uk
; Sat Dec 25 2021 18:22:34 GMT+0000 (Greenwich Mean Time)
